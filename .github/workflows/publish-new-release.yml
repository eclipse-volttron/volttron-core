name: "Publish new release"

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  release:
    name: Publish new release
    runs-on: ubuntu-latest
    # only merged pull requests that begin with 'release/' or 'hotfix/' must trigger this job
    if: github.event.pull_request.merged == true &&
      ((startsWith(github.event.pull_request.head.ref, 'release/') || startsWith(github.event.pull_request.head.ref, 'hotfix/'))

    steps:
      - name: Extract version from branch name (for release branches)
        if: startsWith(github.event.pull_request.head.ref, 'release/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#release/}

          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Extract version from branch name (for hotfix branches)
        if: startsWith(github.event.pull_request.head.ref, 'hotfix/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#hotfix/}

          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
      
      - name: "‚úèÔ∏è Generate release changelog"
        id: changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          headerLabel: "# Release ${{ env.RELEASE_VERSION }} "
# unreleased=false
# header="# Release"
# future-release=3.0.0
# since-tag=1.0.0
      - name: Create Release
        uses: thomaseizinger/create-release@1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          target_commitish: ${{ github.event.pull_request.merge_commit_sha }}
          tag_name: ${{ env.RELEASE_VERSION }}
          name: ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false
          body: |
            ${{steps.changelog.outputs.changelog}}
          

      - name: Merge main into develop branch
        uses: thomaseizinger/create-pull-request@1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          head: main
          base: develop
          title: Merge main into develop branch
          body: |
            This PR merges the main branch back into develop.
            This happens to ensure that the updates that happend on the release branch.

      # if needed, you can checkout the latest main here, build artifacts and publish / deploy them somewhere
      # the create-release action has an output `upload_url` output that you can use to upload assets

      publish_to_pypi:
        uses: release

        runs-on: ubuntu-22.04

        steps:
          - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
          - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

          - name: Checkout code
            uses: actions/checkout@v2

          - name: Build and publish to pypi
            uses: JRubics/poetry-publish@v1.7
            with:
              # These are only needed when using test.pypi
#              repository_name: testpypi
#              repository_url: https://test.pypi.org/legacy/
              pypi_token: ${{ secrets.PYPI_TOKEN }}
              ignore_dev_requirements: "yes"
